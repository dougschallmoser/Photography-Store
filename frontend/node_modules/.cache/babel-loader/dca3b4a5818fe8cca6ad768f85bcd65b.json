{"ast":null,"code":"function sumItems(items) {\n  const arrAmounts = cartItems.map(item => item.price);\n  const total = arrAmounts.reduce((total, item) => total + item.quantity, 0).toFixed(2);\n}\n\nfunction CartReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      if (!state.cartItems.find(item => item.id === action.payload.id)) {\n        state.cartItems.push({ ...action.payload,\n          quantity: 1\n        });\n      } else {\n        state.cartItems.find(item => item.id === action.payload.id).quantity++;\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems]\n      };\n\n    default:\n      return state;\n  }\n}\n\n_c = CartReducer;\nexport default CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["/Users/dougschallmoser/Development/learning/react/14-shopping-cart/src/contexts/CartReducer.js"],"names":["sumItems","items","arrAmounts","cartItems","map","item","price","total","reduce","quantity","toFixed","CartReducer","state","action","type","find","id","payload","push"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAMC,UAAU,GAAGC,SAAS,CAACC,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACC,KAA3B,CAAnB;AACA,QAAMC,KAAK,GAAGL,UAAU,CAACM,MAAX,CAAkB,CAACD,KAAD,EAAQF,IAAR,KAAiBE,KAAK,GAAGF,IAAI,CAACI,QAAhD,EAA0D,CAA1D,EAA6DC,OAA7D,CAAqE,CAArE,CAAd;AACD;;AAED,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,UAAI,CAACF,KAAK,CAACT,SAAN,CAAgBY,IAAhB,CAAqBV,IAAI,IAAIA,IAAI,CAACW,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAAxD,CAAL,EAAkE;AAChEJ,QAAAA,KAAK,CAACT,SAAN,CAAgBe,IAAhB,CAAqB,EAAC,GAAGL,MAAM,CAACI,OAAX;AAAoBR,UAAAA,QAAQ,EAAE;AAA9B,SAArB;AACD,OAFD,MAEO;AACLG,QAAAA,KAAK,CAACT,SAAN,CAAgBY,IAAhB,CAAqBV,IAAI,IAAIA,IAAI,CAACW,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAAxD,EAA4DP,QAA5D;AACD;;AAED,aAAO,EACL,GAAGG,KADE;AAELT,QAAAA,SAAS,EAAE,CAAC,GAAGS,KAAK,CAACT,SAAV;AAFN,OAAP;;AAIF;AACE,aAAOS,KAAP;AAbJ;AAeD;;KAhBQD,W;AAkBT,eAAeA,WAAf","sourcesContent":["function sumItems(items) {\n  const arrAmounts = cartItems.map(item => item.price)\n  const total = arrAmounts.reduce((total, item) => total + item.quantity, 0).toFixed(2)\n}\n\nfunction CartReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      if (!state.cartItems.find(item => item.id === action.payload.id)) {\n        state.cartItems.push({...action.payload, quantity: 1})\n      } else {\n        state.cartItems.find(item => item.id === action.payload.id).quantity++\n      }\n\n      return {\n        ...state,\n        cartItems: [...state.cartItems]\n      }\n    default: \n      return state\n  }\n}\n\nexport default CartReducer"]},"metadata":{},"sourceType":"module"}